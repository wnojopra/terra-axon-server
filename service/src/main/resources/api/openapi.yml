openapi: 3.0.3
info:
  title: Terra Axon Server
  description: |
    Terra Axon Server

  version: 0.0.1

security:
  - authorization: [openid, email, profile]
  - bearerAuth: []

paths:
  # Unauthenticated Paths
  /status:
    get:
      security: []
      summary: Returns the operational status of the service
      operationId: serviceStatus
      tags: [Public]
      responses:
        "200":
          description: Service can process requests
        "500":
          description: |
            Service cannot process requests. That might be because dependent services are
            unavailable, or because there is a problem with the service itself.

  /version:
    get:
      security: []
      summary: Returns the deployed version of the service
      operationId: serviceVersion
      tags: [Public]
      responses:
        "200":
          description: Version properties
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionProperties"

  # Unauthenticated Auth Paths
  /auth/exchangeAuthorizationCode:
    parameters:
      - $ref: "#/components/parameters/AuthCode"
    get:
      security: []
      summary: |
        Exchange an authorization code for an access token and refresh token.
      operationId: getAuthTokens
      tags: [Authorization]
      responses:
        "200":
          $ref: "#/components/responses/TokenResultResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "500":
          $ref: "#/components/responses/ServerError"

  /auth/refreshToken:
    parameters:
      - $ref: "#/components/parameters/RefreshToken"
    get:
      security: []
      summary: |
        Pass in a refresh token to receive an access token.
      operationId: getRefreshedAccessToken
      tags: [Authorization]
      responses:
        "200":
          $ref: "#/components/responses/TokenResultResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "500":
          $ref: "#/components/responses/ServerError"

  # GetFile paths
  /api/workspaces/v1/{workspaceId}/resources/{resourceId}/file:
    parameters:
      - $ref: "#/components/parameters/WorkspaceId"
      - $ref: "#/components/parameters/ResourceId"
      - in: query
        name: convertTo
        description: A file type to convert the requested file into before returning
        schema:
          type: string
    get:
      summary: Retrieves a file referenced by the given WSM resource
      operationId: getFile
      tags: [GetFile]
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
                format: binary

  /api/workspaces/v1/{workspaceId}/resources/{resourceId}/file/objects/{objectPath}:
    parameters:
      - $ref: "#/components/parameters/WorkspaceId"
      - $ref: "#/components/parameters/ResourceId"
      - $ref: "#/components/parameters/ObjectPath"
      - in: query
        name: convertTo
        description: A file type to convert the requested file into before returning
        schema:
          type: string
    get:
      summary: Retrieves an object in a provided file containing WSM resource
      operationId: getFileInBucket
      tags: [GetFile]
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
                format: binary

  /api/workspaces/v1/{workspaceId}/resources/{resourceId}/signedUrl/objects/{objectPath}:
    parameters:
      - $ref: "#/components/parameters/WorkspaceId"
      - $ref: "#/components/parameters/ResourceId"
      - $ref: "#/components/parameters/ObjectPath"
    get:
      summary: |
        Generates a signed URL with read-access to the GCS object from the corresponding bucket in WSM.
        These are generated using V4 signatures.
      operationId: getSignedUrl
      tags: [GetFile]
      responses:
        "200":
          $ref: "#/components/responses/SignedUrlResultResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  # Cromwell paths.
  /api/workspaces/{workspaceId}/cromwell/workflows/{workflowId}/status:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/WorkflowId'
    get:
      summary: |
        Retrieves the current state for a workflow
      operationId: getWorkflowStatus
      tags: [ CromwellWorkflow ]
      responses:
        "200":
          $ref: "#/components/responses/WorkflowStatusResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/workspaces/{workspaceId}/cromwell/workflows/{workflowId}/labels:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/WorkflowId'
    get:
      summary: |
        Retrieves the current state for a workflow
      operationId: getWorkflowLabels
      tags: [ CromwellWorkflow ]
      responses:
        "200":
          description: Workflow labels.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowIdAndLabel"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/workspaces/{workspaceId}/cromwell/workflows/{workflowId}/metadata:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/WorkflowId'
      - name: includeKey
        description: >
          When specified, filters metadata to only return fields with names which begins with this value.
          This key is used relative to the root of the response *and* relative to each call's metadata fields.
        required: false
        style: form
        schema:
          type: array
          items:
            type: string
        in: query
      - name: excludeKey
        description: >
          When specified, filters metadata to not return any field with a name which begins with this value.
          This key is used relative to the root of the response *and* relative to each call's metadata fields.
          Use 'calls' to filter out all call level metadata.
        required: false
        style: form
        schema:
          type: array
          items:
            type: string
        in: query
      - name: expandSubWorkflows
        description: >
          When true, metadata for sub workflows will be fetched and inserted automatically in the metadata response.
        required: false
        schema:
          type: boolean
        in: query
    get:
      summary: |
        Get workflow and call-level metadata for a specified workflow.
      operationId: getWorkflowMetadata
      tags: [ CromwellWorkflow ]
      responses:
        "200":
          description: Status of workflow run.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowMetadataResponse'
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/workflows/{workspaceId}/cromwell/workflows/query:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - name: submission
        required: false
        schema:
          type: string
          format: date-time
        in: query
        description: >
          Returns only workflows with an equal or later submission time. Can be specified at most once. If both submission time and start date are
          specified, submission time should be before or equal to start date.
      - name: start
        required: false
        schema:
          type: string
          format: date-time
        in: query
        description: >
          Returns only workflows with an equal or later start datetime.  Can be specified at most once.
          If both start and end date are specified, start date must be before or equal to end date.
      - name: end
        required: false
        schema:
          type: string
          format: date-time
        in: query
        description: >
          Returns only workflows with an equal or earlier end datetime.  Can be specified at most once.
          If both start and end date are specified, start date must be before or equal to end date.
      - name: status
        required: false
        in: query
        style: form
        schema:
          type: array
          items:
            type: string
            enum:
              - Submitted
              - Running
              - Aborting
              - Failed
              - Succeeded
              - Aborted
        description: >
          Returns only workflows with the specified status.  If specified multiple times,
          returns workflows in any of the specified statuses.
      - name: name
        required: false
        in: query
        style: form
        schema:
          type: array
          items:
            type: string
            pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
        description: >
          Returns only workflows with the specified name.  If specified multiple times,
          returns workflows with any of the specified names.
      - name: id
        required: false
        in: query
        style: form
        schema:
          type: array
          items:
            type: string
            pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
        description: >
          Returns only workflows with the specified workflow id.  If specified multiple times,
          returns workflows with any of the specified workflow ids.
      - name: label
        required: false
        in: query
        style: form
        schema:
          type: array
          items:
            type: string
            pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
        description: >
          Returns workflows with the specified label keys.  If specified multiple times,
          returns workflows with all of the specified label keys. Specify the label key
          and label value pair as separated with
          "label-key:label-value"
      - name: labelor
        required: false
        in: query
        style: form
        schema:
          type: array
          items:
            type: string
            pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
        description: >
          Returns workflows with the specified label keys.  If specified multiple times,
          returns workflows with any of the specified label keys. Specify the label key
          and label value pair as separated with
          "label-key:label-value"
      - name: excludeLabelAnd
        required: false
        in: query
        style: form
        schema:
          type: array
          items:
            type: string
            pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
        description: >
          Excludes workflows with the specified label.  If specified multiple times,
          excludes workflows with all of the specified label keys. Specify the label key
          and label value pair as separated with
          "label-key:label-value"
      - name: excludeLabelOr
        required: false
        in: query
        style: form
        schema:
          type: array
          items:
            type: string
            pattern: ^([a-z][-a-z0-9]*[a-z0-9])?[:]([a-z][-a-z0-9]*[a-z0-9])?$
        description: >
          Excludes workflows with the specified label.  If specified multiple times,
          excludes workflows with any of the specified label keys. Specify the label key
          and label value pair as separated with
          "label-key:label-value"
      - name: additionalQueryResultFields
        required: false
        in: query
        style: form
        schema:
          type: array
          items:
            type: string
        description: >
          Currently only 'labels' is a valid value here. Use it to include a list of labels with each result.
      - name: includeSubworkflows
        required: false
        schema:
          type: boolean
          format: boolean
        in: query
        description: Include subworkflows in results. By default, it is taken as true.
    get:
      operationId: getWorkflowQuery
      summary: Get workflows matching some criteria
      description: Query for workflows which match various criteria. When a combination of criteria are applied the endpoint will return
      tags: [CromwellWorkflow]
      responses:
        "200":
          description: Response to workflow query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowQueryResponse'
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/workspaces/{workspaceId}/cromwell/workflows:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      operationId: submitWorkflow
      summary: Submit a workflow for execution
      description: Submits a workflow to Cromwell.
      tags: [CromwellWorkflow]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitWorkflowRequestBody'
      responses:
        '201':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowIdAndStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    # Please keep alphabetized
    ErrorReport:
      type: object
      required: [message, statusCode, causes]
      properties:
        message:
          type: string
        statusCode:
          type: integer
        causes:
          type: array
          items:
            type: string

    TokenReport:
      type: object
      required: [accessToken, tokenType]
      properties:
        accessToken:
          type: string
        expiresIn:
          type: integer
          format: int64
        tokenType:
          type: string
        scope:
          type: string
        refreshToken:
          type: string
        idToken:
          type: string

    SignedUrlReport:
      type: object
      required : [signedUrl]
      properties:
        signedUrl:
          type: string

    VersionProperties:
      type: object
      required: [gitTag, gitHash, github, build]
      properties:
        gitTag:
          type: string
          description: Git tag of currently deployed app.
        gitHash:
          type: string
          description: Git hash of currently deployed app.
        github:
          type: string
          description: Github link to currently deployed commit.
        build:
          type: string
          description: Version of the currently deployed app declared in build.gradle. Client and server versions are linked.

    WorkflowIdAndStatus:
      type: object
      required: [id, status]
      properties:
        id:
          $ref: '#/components/schemas/WorkflowId'
        status:
          $ref: '#/components/schemas/WorkflowStatus'

    WorkflowStatus:
      type: string
      description: The status of the workflow.

    WorkflowId:
      type: string
      format: uuid
      description: The identifier of the workflow

    WorkflowIdAndLabel:
      type: object
      required: [id, labels]
      properties:
        id:
          $ref: '#/components/schemas/WorkflowId'
        labels:
          type: object
          additionalProperties:
            type: string

    WorkflowMetadataResponse:
      description: Workflow and call level metadata.
      required: [id, status, submission]
      properties:
        id:
          $ref: '#/components/schemas/WorkflowId'
        status:
          $ref: '#/components/schemas/WorkflowStatus'
        submission:
          type: string
          format: date-time
          description: Submission datetime of the workflow in ISO 8601 format with milliseconds
        start:
          type: string
          format: date-time
          description: Start datetime of the workflow in ISO 8601 format with milliseconds
        end:
          type: string
          format: date-time
          description: End datetime of the workflow in ISO 8601 format with milliseconds
        inputs:
          type: object
          description: Map of input keys to input values
        outputs:
          type: object
          description: Map of output keys to output values
        calls:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/CallMetadata"
        failures:
          $ref: '#/components/schemas/FailureMessage'

    SubmitWorkflowRequestBody:
      type: object
      properties:
        workflowGcsUri:
          description: GCS uri which points to the workflow. Either workflow GCS uri or workflow url is required. If both are specified, then workflow URL takes precedence.
          type: string
        workflowUrl:
          description: URL which points to the workflow. Either workflow GCS uri or workflow url is required. If both are specified, then workflow URL takes precedence.
          type: string
        workflowOnHold:
          description: Put workflow on hold upon submission. By default, it is taken as false.
          type: boolean
        workflowInputs:
          description: JSON or YAML file containing the inputs as an object. For WDL workflows a skeleton file can be generated from WOMtool using the "inputs" subcommand.
          type: string
        workflowOptions:
          description: JSON file containing configuration options for the execution of this workflow. jes_gcs_root is required; the rest are optional.
          type: object
          additionalProperties: true
          properties:
            jes_gcs_root:
              type: string
            delete_intermediate_output_files:
              type: string
            memory_retry_multiplier:
              type: string
            write_to_cache:
              type: string
            read_from_cache:
              type: string
            final_workflow_log_dir:
              type: string
            final_call_logs_dir:
              type: string
          required:
            - jes_gcs_root
        workflowType:
          description: The workflow language for the file you submitted. Cromwell currently supports WDL.
          type: string
          enum: [ WDL ]
        workflowTypeVersion:
          description: The specification version for the workflow language being used. For WDL, Cromwell currently supports draft-2 and 1.0.
          type: string
          enum: [ "1.0", "draft-2"]
        labels:
          description: JSON object of labels to apply to this workflow.
          type: string
        workflowDependenciesGcsUri:
          description: GCS URI to ZIP file containing workflow source files that are used to resolve local imports. This zip bundle will be unpacked in a sandbox accessible to this workflow.
          type: string
        requestedWorkflowId:
          description: An ID to ascribe to this workflow. Must be a JSON string in UUID-format. If not supplied a random ID will be generated for the workflow.
          type: string
          format: uuid


    CallMetadata:
      description: Call level metadata
      properties:
        inputs:
          type: object
          description: Mapping of input fully qualified names to stringified values
        executionStatus:
          type: string
          description: Status in Cromwell execution terms.
        backend:
          type: string
          description: The type of backend on which the call executed (e.g. JES, SGE, Local)
        backendStatus:
          type: string
          description: Status in backend-specific terms.  Currently this will only be defined for the JES backend.
        start:
          type: string
          format: date-time
          description: Start datetime of the call execution in ISO8601 format with milliseconds
        end:
          type: string
          format: date-time
          description: End datetime of the call execution in ISO8601 format with milliseconds
        jobId:
          type: string
          description: Backend-specific job ID
        failures:
          $ref: '#/components/schemas/FailureMessage'
        returnCode:
          type: integer
          description: Call execution return code
        stdout:
          type: string
          description: Path to the standard output file for this call
        stderr:
          type: string
          description: Path to the standard error file for this call
        backendLogs:
          type: object
          description: Paths to backend specific logs for this call

    FailureMessage:
      description: Failure messages
      required: [failure, timestamp]
      type: object
      properties:
        failure:
          type: string
          description: The failure message
        timestamp:
          type: string
          format: date-time
          description: The at which this failure occurred

    WorkflowQueryResponse:
      description: Response to a workflow query
      required: [results, totalResultsCount]
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowQueryResult'
        totalResultsCount:
          type: integer

    WorkflowQueryResult:
      description: Result for an individual workflow returned by a workflow query
      required:
        - id
        - status
      properties:
        id:
          type: string
          description: Workflow ID
        name:
          type: string
          description: Workflow name
        status:
          type: string
          description: Workflow status
        submission:
          type: string
          format: date-time
          description: Workflow submission datetime
        metadataArchiveStatus:
          type: string
          description: Status in metadata archives
        start:
          type: string
          format: date-time
          description: Workflow start datetime
        end:
          type: string
          format: date-time
          description: Workflow end datetime

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorReport"

    Conflict:
      description: Request conflicts with current state
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorReport"

    NotFound:
      description: Not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorReport"

    PermissionDenied:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorReport"

    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorReport"

    SignedUrlResultResponse:
      description: Result of a signed URl request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SignedUrlReport"

    TokenResultResponse:
      description: Result of a token request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TokenReport"

    WorkflowStatusResponse:
      description: Status of workflow run.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkflowIdAndStatus'


  parameters:
    ResourceId:
      name: resourceId
      in: path
      description: A UUID used to identify a resource in a WSM workspace.
      required: true
      schema:
        type: string
        format: uuid

    WorkspaceId:
      name: workspaceId
      in: path
      description: A UUID to used to identify a WSM workspace
      required: true
      schema:
        type: string
        format: uuid

    WorkflowId:
      name: workflowId
      in: path
      description: A UUID used to identify the workflow submission ID.
      required: true
      schema:
        $ref: '#/components/schemas/WorkflowId'

    ObjectPath:
      name: objectPath
      in: path
      description: File path to object
      required: true
      schema:
        type: string

    AuthCode:
      name: authCode
      description: OAuth 2.0 authorization code provided by Google.
      in: query
      required: true
      schema:
        type: string

    RefreshToken:
      name: refreshToken
      description: OAuth 2.0 refresh token provided by Google.
      in: query
      required: true
      schema:
        type: string

  securitySchemes:
    authorization:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
    bearerAuth:
      type: http
      scheme: bearer
